[tool.poetry]
name = "openmethane_prior"
version = "1.2.1a0"
description = "Method to calculate a gridded, prior emissions estimate for methane across Australia."
authors = [
     "Peter Rayner <peter.rayner@superpowerinstitute.com.au>",
     "Lindsay Gaines <lindsay.gaines@superpowerinstitute.com.au>",
     "Gerard Mason <gerard.mason@superpowerinstitute.com.au>",
     "Jared Lewis <jared.lewis@climate-resource.com>",
     "Daniel Busch <daniel.busch@climate-resource.com>",
]
readme = "README.md"
packages = [
    {include = "openmethane_prior", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
numpy = "^1.26.4"
netcdf4 = "^1.6.5"
xarray = "2025.06.1"
rioxarray = "^0.15.5"
pyproj = "^3.6.1"
pandas = "^2.2.2"
geopandas = "^0.14.4"
python-dotenv = "^1.0.1"
colorama = "^0.4.6"
cdsapi = "^0.7.3"
shapely = "^2.0.4"
environs = "^11.0.0"
prettyprinter = "^0.18.0"
pytest-mock = "^3.15.1"

[tool.poetry.group.tests.dependencies]
pytest = "^8.2.1"

[tool.poetry.group.dev.dependencies]
licenseheaders = "^0.8.8"
ruff = "^0.5.1"
towncrier = "^24.7.1"


[tool.poetry.group.notebooks.dependencies]
notebook = "^7.2.1"
matplotlib = "^3.9.1.post1"
jupytext = "^1.17.2"
cartopy = "^0.25.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["src"]
target-version = "py311"
# Provide some leeway for long docstring
line-length = 100


[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # pandas support via pandas-vet. In some cases we will want to disable
    # this because it can lead to too many false positives.
    "PD",
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D100",  # Missing docstring in public module
    "D105",  # Missing docstring in magic methods
    "D106",  # Missing docstring in public nested class
    "D400",  # First line should end with a period
    "TRY003",  # Avoid specifying long messages outside the exception class
    "PD011", #  Use `.to_numpy()` instead of `.values`
    "S101",  # Use of `assert` detected
]

[tool.ruff.lint.per-file-ignores]
"test*.py" = [
    "D",  # Documentation not needed in tests
    "S101",  # S101 Use of `assert` detected
    "PLR2004" # Magic value used in comparison
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = ["src", "scripts", "notebooks"]

[tool.towncrier]
package = "openmethane_prior"
package_dir = "src"
filename = "docs/changelog.md"
directory = "changelog/"
title_format = "## openmethane-prior {version} ({project_date})"
underlines = [
    "",
    "",
    "",
]
issue_format = "[#{issue}](https://github.com/openmethane/openmethane-prior/pulls/{issue})"
type = [
    { directory = "breaking", name = "⚠️ Breaking Changes", showcontent = true },
    { directory = "deprecation", name = "🗑️ Deprecations", showcontent = true },
    { directory = "feature", name = "🆕 Features", showcontent = true },
    { directory = "improvement", name = "🎉 Improvements", showcontent = true },
    { directory = "fix", name = "🐛 Bug Fixes", showcontent = true },
    { directory = "docs", name = "📚 Improved Documentation", showcontent = true },
    { directory = "trivial", name = "🔧 Trivial/Internal Changes", showcontent = false },
]